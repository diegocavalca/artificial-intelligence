(defun uniao (L1 L2)
  (cond ((null L1) L2)
        ((null L2) L1)
        ((member (car L1) L2)
         (uniao (cdr L1) L2))
        (T (cons (car L1) (uniao (cdr L1) L2)))
  )
)

(defun inter (L1 L2)
  (cond ((null L1) nil)
        ((null L2) nil)
        ((member (car L1) L2)
         (cons (car L1) (inter (cdr L1) L2)))
        (T (inter (cdr L1) L2))
  )
)

(defun difer (L1 L2)
  (cond ((null L1) nil)
        ((member (car L1) L2)
         (difer (cdr L1) L2))
        (T (cons (car L1) 
                 (difer (cdr L1) L2) ) )
  )
)
